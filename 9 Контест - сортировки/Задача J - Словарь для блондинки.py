# Блондинка Даша любит решать кроссворды на латинском языке, пользуясь орфографическим словарем. Часто Даша отгадывает
# последние буквы слова и долго ищет каким словам подходит такая концовка. Она мечтает о словаре, где бы слова были
# разбиты на главы по количеству букв в слове и написаны задом наперед. Помогите ей составить такой словарь по заданному
# орфографическому словарю латинском языка.
# Формат входных данных
# В первой строке содержится единственное целое число N (1≤N≤100) — количество латинских слов в словаре. Далее следует
# N слов по одному слову на строку. Все слова состоят только из маленьких латинских букв. Общее количество слов на входе
# не превышает 100. Длина каждого слова не превосходит 15 символов.
# Формат результата
# Длина слов в данном блоке. На следующих строках слова задом наперед и исходное слово через пробел в лексикографическом
# порядке.
# Ввод: 3\neucharis\nfittonia\ntagetes Вывод: 7\nsetegat tagetes\n8\nainottif fittonia\nsirahcue eucharis

n = int(input())
C = []
D = []
E = []
print(n)
for i in range(n):
    A = input()
    C.append(A)
    D.append(len(A))
    E.append("".join(reversed(A)))
result = list(zip(C, D, E))

C1 = sorted(result, key=lambda x: x[2])
C2 = sorted(C1, key=lambda x: x[1])

k = C2[0][1]
flag = 0
for i in range(len(C2)):
    if k != C2[i][1]:
        flag = 0
    if flag == 0:
        print(C2[i][1])
        flag += 1

    k = C2[i][1]
    print("".join(C2[i][2]), C2[i][0])
