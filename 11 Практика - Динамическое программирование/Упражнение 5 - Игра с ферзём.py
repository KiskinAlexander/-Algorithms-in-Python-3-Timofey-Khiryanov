# Реализовать алгоритм поиска выигрышных и проигрышных позиций в игре с ферзём на прямоугольном поле M на N,
# где N — высота, а M — ширина поля.
def reset_diag_line_column(A, N, M):
    # Обнуляем диагональ , вертикаль и горизонталь если клетка не 0 или 2
    for i in range(M - 1, -1, -1):
        for j in range(N - 1, -1, -1):
            if A[j][i] != (0 or 2):
                if j + 1 == N or i + 1 == M or M - i == N - j:
                    A[j][i] = 0


M = int(input('Введите количество столбцов: '))
N = int(input('Введите количество строк: '))
A = [[1] * M for i in range(N)]
# идём от нижней правой клетки. Делаем из неё 2, строки, столбцы, диагонали обнуляем. Далее идём по всем элементам и обнуляем
for i in range(M - 1, -1, -1):
    for j in range(N - 1, -1, -1):
        if A[j][i] == 1:
            A[j][i] = 2
            reset_diag_line_column(A, j + 1, i + 1)
# распечатка матрицы
for i in range(len(A)):
    for j in range(len(A[i])):
        print(A[i][j], end=' ')
    print()
